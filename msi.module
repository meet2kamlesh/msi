<?php

/**
 * @file
 * Used to alter the Site information form and add a textfield for siteapikey.
 */

/**
 * Implements hook_menu().
 */
function msi_menu() {
  $items = array();
  $items['page_json/%/%'] = array(
    'title' => 'Json Result',
    'page callback' => 'page_json_output',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_form_alter().
 */
function msi_form_alter(&$form, &$form_state, $form_id){

  // Check form id of System settings form
  if('system_site_information_settings' == $form_id){

      // Add textfield for API Key.
      $form['siteapikey'] = array(
        '#type' => 'textfield',
        '#title' => t('Site API Key'),
        '#default_value' => empty(variable_get('siteapikey')) ? trim('No API Key yet') : variable_get('siteapikey'),
      );
      // Change the Submit button Text.
      $form['actions']['submit']['#value'] = t('Update Configuration');
      $form['#submit'][] = 'msi_system_site_information_form_submit';
  }
}

/**
 * Implement custom function for display message for save API Key.
 */
function msi_system_site_information_form_submit($form, &$form_state){
  drupal_set_message(t('The Site API Key has been saved with @apikey', array('@apikey' => $form_state['values']['siteapikey'])),'status');
}
 

/**
 * Define page callback function.
 * This function will return the json of apropriate node if apikey will match.
 */
function page_json_output($node_id){
  // load node
  $node_data = node_load($node_id);
  // get apikey 
  $apikey = variable_get('siteapikey');
  // check if apikey is exist with apropriate node then return json of node.
  if($node_data->type =='page' && $apikey == arg(1)){
    return drupal_json_output($node_data);
    drupal_exit();
  }
  // if apikey is not associate with nid then restrict user to get json result
  else if($node_data->type =='page' && $apikey != arg(1)){
  drupal_access_denied();
  drupal_exit();
  }
}
